language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
- npm run start:kong
script:
- sleep 15
- npm run lint
- npm run test
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_65768d5b4863_key -iv $encrypted_65768d5b4863_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- npm run stop:kong
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: lNXQSHp6wCNvw/cNGuY1JDSNQ4axRBYB0zJ8w7LRd7bXjzgWNMyyRqKchUTWSDboW0ikIBa97ovX7cGBVYHCT/FCAJa6p2Qc7vrWcJmof3DquBoVi3K8Oltcm8Q6HB8YO7QzRtv70wNDVW71p4uoDcZqgjZK/qx/FFUV98M6J58b9JJZ8aRI6BoLnPaJAS9w4E7ygX6EJHvvmYBfdMjRKdErFsN1jl9LmDPugdT5tw9LA0LDPYrcq+hAVfMdLcgG9DaWZr4zS1KUt4hPlTV7zHtWMPMY4MHTeCoqwN/MucvxfyalN5sZTPsm/C3BbaknE2Hk3hl+7WdAbPJQrFwk15LyoFoMZdYByeP9h89OWOGPiMYL+uQyKvL+rD2qXJjuCiSkZQTSsDRKlxhLfyDi+Cm0XZica91gQahnFMM9OCUQeK4t7ztoJuZV4KrZx/Kzy3fZUvJ/OpseR5D7vbOXkQyNcOSEghxPNNzwO9A0zT+u1EoZFocDRXnqTUKti/kOiuexn2nTpC3kQYRlAMoIpS7RTfwSIPJoa6PFyRMuDO1wlUZ092Cy+zPl6C1N7zHBYO3qcPTtAO52jZM53rRDPzYis9EocqUlpPXD4Yzm2RQy91OBtXkLqUMIVVOqLWAh/FX1fI9Mn/HWAbk/h62ArOAhejTylLkd/kZO/Ty53a8=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: DZEu1QinrIBAPdSs75ys5s7j++UQCp+BZ/mhk+JKDPP34opLRNLpKQPDnV5rjkRrmeUR8mhC7FByli2YctxGuzuMQcJdjTwl7Yl9bMrPED3TqvIwx5UFwJb/ANJ68Fful2+EhhLv/dEfujuaqfNaYvpeVv5oRs+3c/wQP88Z2bU3VRzGQIbkzTn3Gyd45ZQruK/cE+5tNBqail0+byPtrQW3sn6SvSFNNl6HWUj77JFxKa+m615GynbvsBTQF8T34P5Pa2WYKJcs9ZKk8BOCQQc0os3ne+OLX8Emclyr5CLobQ44kLvIOhxF4NcqY3zDfS/nIDIMRBPvM7h+pDZ3KiLdVmCawcdZPeBdCwjFP6gDjtLgMPxijJBBr6tYQY86rvYkgeL78OlyHqk9VGWZgs+RpgbNvyfdC+jMFrKVNkJ6hVyWsZfPVK5Z1MjWe8FMiJvIDa6fDnn8/hEso3h5ofLYB4kIJtaGLvmqoFt98czObNXn+GI0wzkUh61WgDYtV4WPtiUf8KVXa2zKwepBQE+bO3n+lFvV7M+1wofFtK33AdllbfCOGYmamO11QW5qqSkle6Z2z0rYJUqvyHnMD444aKvgFT/9dsoOu4O7nGW8KFWBuW72yRRnl6rqSkl5rcVVVoat3onNYKJqM/K6uWBOmayivxCGJBPtsvh82kw=
  - secure: DCfUtZ3Lzmjc2nBpFOd/ElXdM5mvDL/lt2caejAUHTD11KauF1VjkEEKJZSHBu2kpY0u9CoLWV7i969ygKom7huNBBtyghGgx6CHBm+sV08ESqLgDbBmIAXlw9cKSi11FpHvMAJSGpdCrQg+nZ2AkQKBR3toPoAy6Pxkc3SC6gg+E1LvwjJHvCxofdY5M0GeLiZkf99arS/soyX18W7Qfz+ds7jyUqGFnApBk4EFsHQXUg8n00kYdyNK5KjrUlr0VlA+YzxkEutFN5vDuuI+/P/KsnrZ+teg8pPTRJGuf8Benk4pGuNt3ht4U60b9Hfz7qyRiY5ke8t4EI141cIEVF3RQfSKOVh9uixKBd0v5SqNpzxk3mTalhY9MZnYyiaZ5mPJyOp7UjW7/F7FTdgNIfI/joP7QbON6ZcIxa1WSfalHl0Mm/62YHqmfcsdRbKXr+U8UArzrgOpjkKHsuEuc3uQ3/NFQGIVMYdE5j0C0sExWTsPmgJpKX8BkipFhJOamk/E1s7Fd+NfVzYDZee5T76o4i40BW3eD5CP97yhQscjdDMXd/uYlm6LsH6M7VDUQxWJROYNISi3L7wbs6Mlyx6Snss27s6jpCEb8gCP+7xxl0tsqlDxAfcaBIqbJ4unmEz2w9lXlvABCxfkTkCUE0ue16go75GVmSKLZha2cPM=
  - secure: Xagr2/wpOhBhlTTlMGL30Wef50Pt43NDV8xBau+MwvRCbH1gX1tdZNrrrmxrcwOT3c1EvHnArIkzAQZ19DNTl4DKroN/gBzQaOvNPxl6W0hbBn5y71a5z+6ce9gvbAUeQdDqC8IyD/PbJm31p6oYlnqH8dmLn8gvXcVYYmhjDmpOiboc2O/OuipkSh/r3YIIttab4NU5oyZAHM21Y+96NI3N9/YME5BRGrLMVrYhoY6gaR01YfBoS0cqxQE8Y4b+PrWxxcOY6ixSyJZfBSi+an6Wu01/yvS75OJJ4o01uITeOuaNwHWoXJVLFqOLMavQQCt7Dr/HIOxelaiYRhfYzb0Tp13RV7xYb2b3s1DXjGcLXC4RMVY+o79hK4aSKg4RiEsw6QyyFXDChdXjGJkfAzpMZEqSkruZh5u3zMfdphqKu86985aRfyQxM/eyqngcT9y+6hn5+1LoXZuSmoMcSlzEVQV8lAihgC9NmYW/DoK6SXVlzaFFP048fJRAfDBQ8iuEK3MPXIFIlXb4t1i/WeNuB37Rfh1djgd5rmS/sE4z4EKKDHFih49O7VXAWc81ZJBOjhWewfgqBwFN6d9I3S0dfTq12ObnQOhs4JPnwkrKeXLjdmn03qvbJ3iFzmVfsTjdDv5UVfXk92QJ/Jrp34+wHM4B7jertuG0E8fIqdc=
  - secure: xoTond+IxVPNSATSgoIx00yKaENWALsTTTZzI9GkdxgU7CzOEjXXstIC+bffrEUNtTysxkDLJgpnZ/XVqndZ7UvBgopAlNPNNfaHe2tltb2FRvrKdToytZu52tlDPIsLfUSOymqbESKOfiZIiSeffGUEXJZCd9gB3PqtlacrkQuFc0DrroqSUS+s9z2TR8NwzBPpmEWroImSoSEtnWCSLIc1oIBdwCIxHRvdEXitYSzWVeBOiulB3bJBZn7zF0eE1fi890pGf3fXq+t4DeoJR6bEtZNgRcncW9b4M71UiG5OmZRGNgtUCVaiSCGPUfTknFJJgmqo/QpW0ze6IhwdL890d0fl+6rqUe/dZNfcNhAIer7tJMO3AMRFh9q+wRjGW7BtWEemuJLFXY1CxZuDjN6FBB5Re6G+T8A9ooar0k21xCZVihjN8zVsZvZ9/dmTnxGFwEOCWDDFZT7yfzVVeQBF7nFN1sf/ZQJ5cT/VTJXyAUyZMU0x/sv/jdQximiLKl+9tjj4LghIRFFUuSXhShz9DLV6+D+alRDl28SDHrBczgDVuXapQzo3UGSov9JAOTA4UF5qgvaKoXfnw7IbGx+j3EvxiccdrBlB5BCpelIZ8ze7G5EPYWImQYzN4tOuds0ZAbQW/c4ITLwWU56pPlmkx/YTo++CX5iT6jlNwkI=
